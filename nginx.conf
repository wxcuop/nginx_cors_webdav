worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Main server block
    server {
        listen       80;
        server_name  localhost;

        # CORS proxy setup
        location /cors/ {
            # Extract and validate the URL using rewrite
            rewrite ^/cors/?url=(https?://.*) $target_url break;

            # Ensure the URL is valid
            if ($target_url = "") {
                return 400 "Missing 'url' parameter in query.";
            }

            # Log the target URL for debugging
            access_log /var/log/nginx/cors_access.log;
            error_log /var/log/nginx/cors_error.log notice;

            # Forward the decoded URL
            proxy_pass $decoded_url;

            # Set headers to match the proxied target
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Requested-With "XMLHttpRequest";

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Avoid caching issues for responses
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache 1;

            # Proxy timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Resolve dynamic domains
            resolver 8.8.8.8 valid=300s ipv6=off;
        }

        # WebDAV setup (optional, as per your needs)
        location /webdav/ {
            root /webdav;
            dav_methods PUT DELETE MKCOL COPY MOVE;
            dav_access user:rw group:rw all:r;

            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/htpasswd;

            client_max_body_size 0;
        }e

        # Stub status for NGINX monitoring
        location /nginx_status {
            stub_status;
            allow 127.0.0.1; # restrict to localhost
            deny all;
        }
    }
}
