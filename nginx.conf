# /etc/nginx/nginx.conf

user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events
{
    worker_connections 1024;
}


http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

     log_format custom_debug '$remote_addr - $remote_user [$time_local] '
     '"$request" $status $body_bytes_sent '
     '"$http_referer" "$http_user_agent" '
     'Target_URL="$target_url"';

     access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;
    
    # Main server block
    server {
        listen       80;
        server_name  localhost;
        
        # Serve index.html at the root
        location /
        {
            root /var/www/html; # Update this to the path where your index.html is located
            index index.html;
            autoindex on; # Enable autoindexing
        }
        
        # CORS proxy setup
        location /cors/ {
            # Extract the target URL from the query parameter 'url'
            set $target_url $arg_url;
            # Log the target URL
            access_log /var/log/nginx/access.log combined;
            
            # If target URL is not set, log an error and return 400
            if ($target_url = "") {
                    return 400 "Missing or invalid URL parameter.";
            }
            # Log the target URL for debugging purposes
            access_log /var/log/nginx/access.log main;
            error_log /var/log/nginx/error.log notice;
            access_log /var/log/nginx/access.log custom_debug;

            
            # Assign the target URL to a variable
            set $target_url $1;

            # Ensure the URL is valid
            if ($target_url = "") {
                return 400 "Missing 'url' parameter in query.";
            }


            # Proxy pass the extracted URL
            proxy_pass $target_url;
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            #add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            # 86400 seconds (24 hours) is the maximum a server is allowed.
            proxy_send_timeout 86400s;
            proxy_read_timeout 86400s;

            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS')
            {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST')
            {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            }
            if ($request_method = 'GET')
            {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            }
            # Resolve domain names for dynamic URLs
            resolver 8.8.8.8 valid=300s;
            # Avoid caching issues for responses
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache 1;
        }

        # WebDAV section
        location /webdav/
        {
            root /webdav;
            dav_methods PUT DELETE MOVE;
            dav_access user:rw group:rw all:r;

            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/htpasswd;

            client_max_body_size 0;
        }
    }

    server
    {
        # expose /nginx_status but on a different port to avoid
        # external visibility / conflicts with the app.
        listen 8090;
        location /nginx_status
        {
            stub_status on;
            access_log off;
        }
        location /
        {
            root /dev/null;
        }
    }
}
